
var maxColnum = 11;
var maxRownum = 10;
var mydata = [];
var colOption = [];

for(var i=0; i < maxColnum; i++){
  mydata[i] = [];
  for(var j=0; j < maxRownum; j++){
    mydata[i][j] = "";
  }
  colOption[i] = {readOnly: true};
}
colOption[0] = {readOnly: false};

var container = document.getElementById('main');
var handsontable = new Handsontable(container, {
  /* オプション */
  width: 980,
  height: 240,
  data: mydata,
  rowHeaders: true,
  colHeaders: ["ヤフオク商品URL","商品タイトル","オークションID","現在価格","即決価格","状態","入札件数","残り時間","画像1","画像2","画像3"],
  maxCols: maxColnum,
  maxRows: maxRownum,
  manualColumnResize: true,
  autoColumnSize: false,
  colWidths:[200,300,150,120,120,120,120,120,120,120,120],
  columns: colOption
});

var csv_container = document.getElementById('csv');
var idata = gon.csv_head
var ini = idata

var csv_handsontable = new Handsontable(csv_container, {
  /* オプション */
  width: 980,
  height: 240,
  //data: mydata,
  data: idata,
  rowHeaders: true,
  colHeaders: true,
  maxRows: maxRownum,
  manualColumnResize: true,
  autoColumnSize: false,
  wordWrap: false
});
csv_handsontable.alter('insert_row', idata.length,10);

var selected_container = document.getElementById('selected');
var init = [];
init[0] = [];
init[0][0] = "";

var selected_handsontable = new Handsontable(selected_container, {
  /* オプション */
  width: 380,
  height: 60,
  colWidths: [340],
  //data: mydata,
  data: init,
  colHeaders: ["選択中のセル"],
  rowHeaders: false,
  maxRows: 1,
  manualColumnResize: true,
  autoColumnSize: true,
  wordWrap: false
});

Handsontable.hooks.add('afterSelectionEnd', function() {
  var data = csv_handsontable.getValue();
  var res = [];
  res[0] = [];
  res[0][0] = data;
  //res[0][0] = 2;
  //alert(res);
  selected_handsontable.loadData(res);
  selected_handsontable.render();
  //alert("ok");
}, csv_handsontable);



$("#done").click(function () {
  var tempData = handsontable.getData();
  tempData = JSON.stringify(tempData);
  myData = {data: tempData};
  $.ajax({
    url: "/items/get",
    type: "POST",
    data: myData,
    dataType: 'json',
    success: function (myData) {
      handsontable.loadData(myData);

      handsontable.updateSettings(
        {
          maxRows: maxRownum
        }
      );

    },
    error: function (myData) {
      //handsontable.loadData(myData);
      alert("NG");
    }
  });
});


$("#make_csv").click(function () {

  var itemData = handsontable.getData();
  var myData = [];

  $.ajax({
    url: "/items/set_csv",
    type: "GET",
    success: function (myData) {
      var header = myData;

      var headernum = 3;
      var itemnum = itemData.length;

      for(var i = 0; i < headernum; i++){
        myData[i] = header[i];
      }

      if(itemnum != 0){
        for(var i = 0; i < itemnum; i++){
          myData[i+headernum] = [];
          for(var j = 0; j < header[0].length; j++){
            myData[i+headernum][j] = "";
          }
          myData[i+headernum][0] = itemData[i][2];
        }
      }
      csv_handsontable.loadData(myData);
    },
    error: function (myData) {
      alert("NG");
    }
  });


});



$("#csv_upload").click(function () {
  var tempData = csv_handsontable.getData();
  tempData = JSON.stringify(tempData);
  myData = {data: tempData};
  $.ajax({
    url: "/items/upload",
    type: "POST",
    data: myData,
    dataType: 'json',
    success: function (myData) {
      alert("OK!");
    },
    error: function (myData) {
      alert("NG");
    }
  });
});
